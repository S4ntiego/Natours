.card {
  //FUNCTIONALITY

  //to change how the animation of the card sweep will look like for the user (always on the parent element)
  perspective: 150rem;
  //to work also in mozilla firefox
  -moz-perspective: 150rem;
  position: relative;
  height: 52rem;

  &__side {
    //when both sides are made into position:absolute, height of the parent element collapsed (similar to floats) and thus we have to fix it by giving parent the same height as sides
    height: 52rem;
    transition: all 0.8s ease;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    //elements behind the front won't be visible
    backface-visibility: hidden;
    border-radius: 3px;
    //to prevent corners from getting sharp when background image overflows the parent element
    overflow: hidden;
    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.15);

    &--front {
      background-color: $color-white;
    }

    //we need to rotate only the front of the card, because back is already rotated since the beginning
    &--back {
      transform: rotateY(180deg);

      &-1 {
        background-image: linear-gradient(
          to right bottom,
          $color-secondary-light,
          $color-secondary-dark
        );
      }

      &-2 {
        background-image: linear-gradient(
          to right bottom,
          $color-primary,
          $color-tertiary
        );
      }

      &-3 {
        background-image: linear-gradient(
          to right bottom,
          $color-tertiary-light,
          $color-tertiary-dark
        );
      }
    }
  }

  //when the card is hovered, card side will be edited
  &:hover &__side--front {
    transform: rotateY(-180deg);
  }

  &:hover &__side--back {
    transform: rotateY(0);
  }

  //FRONT SIDE STYLING
  &__picture {
    background-size: cover;
    //we usually want to give an element height first instead of width for the flexibility
    height: 23rem;
    background-blend-mode: screen;
    //to make it work on all the browsers, not only the modern ones
    --webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);

    //element at first is very small because there is no content in it
    &--1 {
      background-image: linear-gradient(
          to right bottom,
          $color-secondary-dark,
          $color-secondary-light
        ),
        url("/nat-5.jpg");
    }

    &--2 {
      background-image: linear-gradient(
          to right bottom,
          $color-primary,
          $color-tertiary
        ),
        url("/nat-6.jpg");
    }

    &--3 {
      background-image: linear-gradient(
          to right bottom,
          $color-tertiary-dark,
          $color-tertiary-light
        ),
        url("/nat-7.jpg");
    }
  }

  &__heading {
    font-size: 2.8rem;
    font-weight: 300;
    text-transform: uppercase;
    color: $color-white;
    position: absolute;
    top: 12rem;
    right: 2rem;
    text-align: right;
    width: 75%;
  }

  //we don't nest heading-span under heading because it's a new element, it's not a modifier for heading, it's new element in BEM system
  &__heading-span {
    padding: 1rem 1.5rem;
    //it applies padding to each line, treats each line as new words, clone styles to both boxes
    box-decoration-break: clone;
    &--1 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-secondary-light, 0.85),
        rgba($color-secondary-dark, 0.85)
      );
    }

    &--2 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-primary, 0.85),
        rgba($color-tertiary, 0.85)
      );
    }

    &--3 {
      background-image: linear-gradient(
        to right bottom,
        rgba($color-tertiary-light, 0.85),
        rgba($color-tertiary-dark, 0.85)
      );
    }
  }

  &__details {
    padding: 3rem;
    ul {
      list-style: none;
      width: 80%;
      //we are centering block element inside another block elements, thus we can center by adding margin auto
      margin: 0 auto;

      li {
        text-align: center;
        font-size: 1.5rem;
        padding: 1rem;

        //apply to all but the last child
        &:not(:last-child) {
          border-bottom: 1px solid $color-grey-light-2;
        }
      }
    }
  }

  //BACK SIDE STYLING
  &__cta {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    text-align: center;
  }

  &__price-box {
    text-align: center;
    margin-bottom: 8rem;
    color: $color-white;
  }

  &__price-only {
    font-size: 1.4rem;
    text-transform: uppercase;
  }

  &__price-value {
    font-size: 6rem;
    font-weight: 100;
  }

  // @include respond(tab-port) {
  @media only screen and (max-width: 56.25em), only screen and (hover: none) {
    height: auto;
    border-radius: 3px;
    background-color: white;
    box-shadow: 0 1.5rem 4rem rgba($color-black, 0.15);

    &__side {
      height: auto;
      position: relative;
      box-shadow: none;

      &--back {
        transform: rotateY(0);
        clip-path: polygon(0 15%, 100% 0, 100% 100%, 0 100%);
      }
    }

    //when the card is hovered, card side will be edited
    &:hover &__side--front {
      transform: rotateY(0);
    }

    &__details {
      padding: 1 3rem;
    }

    //BACK SIDE STYLING
    &__cta {
      position: relative;
      top: 0;
      left: 0;
      transform: translate(0);
      width: 100%;
      padding: 7rem 4rem 4rem 4rem;
    }

    &__price-box {
      margin-bottom: 3rem;
    }

    &__price-value {
      font-size: 4rem;
    }
  }
}
